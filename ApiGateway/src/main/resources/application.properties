server.port=8082
spring.application.name=api-gateway
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

## Automatic Routing
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

## Manual Routing
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://users-ws
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[1].id=account-status-check
spring.cloud.gateway.routes[1].uri=lb://account-ws
spring.cloud.gateway.routes[1].predicates[0]=Path=/account-ws/account/status/check
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/account-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id=users-ws
spring.cloud.gateway.routes[2].uri=lb://users-ws
spring.cloud.gateway.routes[2].predicates[0]=Path=/users-ws/users
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[3].id=users-ws-h2-console
spring.cloud.gateway.routes[3].uri=lb://users-ws
spring.cloud.gateway.routes[3].predicates[0]=Path=/users-ws/h2-console
spring.cloud.gateway.routes[3].predicates[1]=Method=GET
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[4].id=users-ws-login
spring.cloud.gateway.routes[4].uri=lb://users-ws
spring.cloud.gateway.routes[4].predicates[0]=Path=/users-ws/users/login
spring.cloud.gateway.routes[4].predicates[1]=Method=POST
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[5].id=users-ws-get-update
spring.cloud.gateway.routes[5].uri=lb://users-ws
spring.cloud.gateway.routes[5].predicates[0]=Path=/users-ws/users/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET,PUT
spring.cloud.gateway.routes[5].predicates[2]=Header=Authorization, Bearer(.*)
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[5].filters[2]=AuthorizationHeaderFilter=ROLE_ADMIN

spring.cloud.gateway.routes[6].id=users-ws-actuator
spring.cloud.gateway.routes[6].uri=lb://users-ws
spring.cloud.gateway.routes[6].predicates[0]=Path=/users-ws/actuator/**
spring.cloud.gateway.routes[6].predicates[1]=Method=GET
spring.cloud.gateway.routes[6].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[6].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[7].id=album-ws
spring.cloud.gateway.routes[7].uri=lb://albums-ws
spring.cloud.gateway.routes[7].predicates[0]=Path=/albums-ws/users/*/albums
spring.cloud.gateway.routes[7].predicates[1]=Method=GET,POST,PUT,DELETE
spring.cloud.gateway.routes[7].predicates[2]=Header=Authorization, Bearer(.*)
spring.cloud.gateway.routes[7].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[7].filters[1]=RewritePath=/albums-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[7].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[8].id=users-ws-delete
spring.cloud.gateway.routes[8].uri=lb://users-ws
spring.cloud.gateway.routes[8].predicates[0]=Path=/users-ws/users/**
spring.cloud.gateway.routes[8].predicates[1]=Method=DELETE
spring.cloud.gateway.routes[8].predicates[2]=Header=Authorization, Bearer(.*)
spring.cloud.gateway.routes[8].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[8].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[8].filters[2]=AuthorizationHeaderFilter=ROLE_ADMIN DELETE

# below is incorrect token.secret as it will be updated with the repo token.secret from API Config Server (which is correct)
#token.secret=25993286db24e6f8790d96241fb126eed1281895e0e128ea2170834b01de20511a0213ff64e3eb6c555d1c7e7a48b153447549a9e9c06c74fcd8d5da7b7a25dddec5b63487ca7448e3a46df5c4e8a62259295faff5799c58c45be3dde2d2682ffcc17ca5781128cb8790c75cf13ebf3839c89312b13352f871903a204ac26820ee106f7dd1e72d97bdd9adbd5cd3145f0cc49393b8b6731d3bd98e56f6573258d3e6e65467f3552cc2f82f5f327e1a81ce005086e9b98b2f293ba2589a3ae9daf3b6e0b333f342ca01a14185e770495f634ee0874cbcedb161c7cb646f096ad5c69c715f57bc9a89e7bb87fde37d623338ab9633b3cf1d89de2cbfec6072ad88

spring.config.import=optional:configserver:http://localhost:8012

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=manager
spring.rabbitmq.password=manager

management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=gateway,health,mappings


